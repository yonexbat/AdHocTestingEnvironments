using AdHocTestingEnvironments.Services;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;
using Moq;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace AdHocTestingEnvironmentsTests
{
    public class KubernetesClientTest
    {

        [Fact]
        public async Task StartOk()
        {

            //Arrange
            IConfiguration configuration = GetConfiguration();
            string host = configuration.GetValue<string>("KubernetesHost");
            string token = configuration.GetValue<string>("KubernetesAccessToken");

            var inMemorySettings = new Dictionary<string, string> {
                {"KubernetesAccessToken", token},
                {"KubernetesHost", host},
                {"KubernetesNamespace", "default" }
            };

            IConfiguration mockConfiguration = new ConfigurationBuilder()
                .AddInMemoryCollection(inMemorySettings)
                .Build();

            var mockLogger = new Mock<ILogger<KubernetesClient>>().Object;
            IKubernetesClient client = new KubernetesClient(mockConfiguration, mockLogger);

            await client.StartEnvironment(new AdHocTestingEnvironments.Model.Kubernetes.InstanceInfo()
            {
                Image = "claudeglauser/sample-webapp:latest",
                InitSqlScript = InitScript,
                Name = "testwzei",
            });
        }

        public IConfiguration GetConfiguration()
        {
            var builder = new ConfigurationBuilder()
                .AddUserSecrets<KubernetesClientTest>();

            return builder.Build();

        }

        private const string InitScript = @"
CREATE DATABASE test;
\connect test;

CREATE TABLE IF NOT EXISTS ""__EFMigrationsHistory"" (
    ""MigrationId"" character varying(150) NOT NULL,
    ""ProductVersion"" character varying(32) NOT NULL,
    CONSTRAINT ""PK___EFMigrationsHistory"" PRIMARY KEY(""MigrationId"")
);

START TRANSACTION;

        CREATE TABLE ""GuestBookEntry"" (
    ""Id"" integer GENERATED BY DEFAULT AS IDENTITY,
    ""Text"" text NULL,
    CONSTRAINT ""PK_GuestBookEntry"" PRIMARY KEY(""Id"")
);

INSERT INTO ""__EFMigrationsHistory"" (""MigrationId"", ""ProductVersion"")
VALUES('20210626104025_InitialCreate', '5.0.7');

COMMIT;
";
    }
}
